# Default values for teamspeak3.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  image: teamspeak:3.13.7
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

license_accepted: true

# Configure your Database here. If no database is configured Teamspeak will use an internal sqlite database.
# You can also configure other database plugins, please consult the Teamspeak documentation.
database: {}
#   plugin: "ts3db_postgresql"
#   sqlCreatePath: "create_postgresql"
#   host: "postgres-host"
#   port: "5432"
#   user: "postgres"
#   password: "securepass"
#   name: "teamspeak"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: ""
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# Currently service type NodePort is the only supported type because I have to figure out how to do correct UDP Ingress
service:
  voice:
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 9987
    nodePort: 30987
  fileTransfer:
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 30033
    nodePort: 30033
  serverQuery:
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 10011

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

dataVolume:
  # If set to true, a PersistentVolumeClaim (PVC) will be created
  enabled: true
  # The storage class to use for the PVC. If not set, the default StorageClass will be used
  storageClass: ""
  # If set, this existing PVC will be used instead of creating a new one
  existingClaim: ""
  # Annotations to add to the PVC
  annotations: {}
  # The requested storage size for the PVC
  size: 4Gi
  # The volume mode for the PVC. Can be either "Filesystem" (default) or "Block"
  volumeMode: ""

nodeSelector: {}

tolerations: []

affinity: {}
